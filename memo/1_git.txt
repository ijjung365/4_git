버전 관리 시스템
	원하는 시점으로 이동할 수 있으며, 각 버전별로 여러 개발자가 협업할 수 있는 최적의 환경을 제공하는 시스템

Git 
	서버 뿐만 아니라 로컬에서도 버전 관리가 가능하며, 로컬이 서버가 될 수 있고, 서버도 로컬이 될 수 있다.
	브랜치라는 개념을 사용하여 개발자 마음대로 로컬 환경에서도 커밋과 버전 관리가 가능하다.

Git-Hub (공유 서버)
	Git으로 관리하는 프로젝트를 호스팅 할 수 있는 사이트 중 하나이다.
	로컬 저장소에서 작업하던 파일을 다른 클라이언트와 공유하기 위한 서버이다.

Git의 기본구조
	작업 폴더 --> 스테이징 영역 --> 저장소

	1. 적업 폴더를 깃에서 관리하도록 설정한다.
	2. 바뀐 부분이 있다면 스테이징 영역으로 추가할 수 있다.
	3. 바뀐 부분 중 원하는 부분만 따로 스테이징을 하여, 관리 할 수 있따.
	4. 스테이징 영역에서 최종 검토 이후 저장소로 업데이트하는 커밋을 진행 할 수 있다.

	

개인 메모

STEP
	1. 폴더 선택 -> Open Git bash here 
	2. git config --global user.name "이름" // ""안에 이름
	3. git config --global user.email "이메일" // ""안에 email
	4. git config --list // 설정값 확인
	5. git init //.git hidden파일 생성
	6. git status
	7. git add 파일명 // 파일 스테이징
	7-1. git rm --cached 파일명 // 파일 언스테이징'
	7-2. git add . // 모든파일 스테이징
	8. git commit -m "설명" // 설명으로 커밋
	8-1. git commit --amend // 마지막 커밋 변경(실행하지말기)
	






